{"version":3,"sources":["webpack:///webpack/bootstrap 5115215527490fcc9d3c","webpack:///./www/js/analytics.js","webpack:///./~/url-parse/index.js","webpack:///./~/requires-port/index.js","webpack:///./~/url-parse/lolcation.js","webpack:///./~/querystringify/index.js"],"names":["_gaq","_sf_async_config","_comscore","window","ANALYTICS","slideStartTime","Date","timeOnLastSlide","embedGa","i","s","o","g","r","a","m","q","push","arguments","l","createElement","getElementsByTagName","async","src","parentNode","insertBefore","document","setupVizAnalytics","startUrl","location","host","pathname","parentUrl","decodeURIComponent","getParameterByName","gaLocation","hostname","gaPath","substring","ga","APP_CONFIG","VIZ_GOOGLE_ANALYTICS","ACCOUNT_ID","hitType","page","name","replace","regex","RegExp","results","exec","search","setupGoogle","trackEvent","eventName","label","value","eventData","PROJECT_SLUG","openShareDiscuss","closeShareDiscuss","clickTweet","clickFacebook","clickEmail","postComment","actOnFeaturedTweet","action","tweet_url","actOnFeaturedFacebook","post_url","copySummary","usedKeyboardNavigation","useKeyboardNavigation","completeTwentyFivePercent","completeFiftyPercent","completeSeventyFivePercent","completeOneHundredPercent","startFullscreen","stopFullscreen","begin","readyChromecast","startChromecast","stopChromecast","exitSlide","slide_index","currentTime","Math","abs"],"mappings":"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,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,cAAc;AACzB,YAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,iBAAiB;AAC5B;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnWA;;AAEA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;ACrCA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0DAAyD;AACzD,IAAG;AACH,uCAAsC;AACtC;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACpDA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"analytics.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5115215527490fcc9d3c\n **/","/*\n * Module for tracking standardized analytics.\n */\n\nimport URL from 'url-parse';\n\nvar _gaq = _gaq || [];\nvar _sf_async_config = {};\nvar _comscore = _comscore || [];\n\nwindow.ANALYTICS = (function () {\n\n    // Global time tracking variables\n    var slideStartTime =  new Date();\n    var timeOnLastSlide = null;\n\n    var embedGa = function() {\n        (function(i,s,o,g,r,a,m) {\n            i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n            m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n    }\n\n    var setupVizAnalytics = function() {\n        var startUrl = location.host + location.pathname;\n\n        var parentUrl = new URL(decodeURIComponent(getParameterByName('parentUrl')));\n        \n        var gaLocation = startUrl + '?parentUrl=' + parentUrl.hostname\n        var gaPath = location.pathname.substring(1) + '?parentUrl=' + parentUrl.hostname;\n\n        ga('create', APP_CONFIG.VIZ_GOOGLE_ANALYTICS.ACCOUNT_ID, 'auto');\n        ga('send', {\n            hitType: 'pageview',\n            location: gaLocation,\n            page: gaPath\n        });\n    }\n\n    var getParameterByName = function(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n            results = regex.exec(location.search);\n        return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    }\n\n    var setupGoogle = function() {\n        embedGa();\n        setupVizAnalytics();\n     }\n\n    /*\n     * Event tracking.\n     */\n    var trackEvent = function(eventName, label, value) {\n        var eventData = {\n            'hitType': 'event',\n            'eventCategory': APP_CONFIG.PROJECT_SLUG,\n            'eventAction': eventName\n        }\n\n        if (label) {\n            eventData['eventLabel'] = label;\n        }\n\n        if (value) {\n            eventData['eventValue'] = value\n        }\n\n        ga('send', eventData);\n    }\n\n    // SHARING\n\n    var openShareDiscuss = function() {\n        trackEvent('open-share-discuss');\n    }\n\n    var closeShareDiscuss = function() {\n        trackEvent('close-share-discuss');\n    }\n\n    var clickTweet = function(location) {\n        trackEvent('tweet', location);\n    }\n\n    var clickFacebook = function(location) {\n        trackEvent('facebook', location);\n    }\n\n    var clickEmail = function(location) {\n        trackEvent('email', location);\n    }\n\n    var postComment = function() {\n        trackEvent('new-comment');\n    }\n\n    var actOnFeaturedTweet = function(action, tweet_url) {\n        trackEvent('featured-tweet-action', action, null);\n    }\n\n    var actOnFeaturedFacebook = function(action, post_url) {\n        trackEvent('featured-facebook-action', action, null);\n    }\n\n    var copySummary = function() {\n        trackEvent('summary-copied');\n    }\n\n    // NAVIGATION\n    var usedKeyboardNavigation = false;\n\n    var useKeyboardNavigation = function() {\n        if (!usedKeyboardNavigation) {\n            trackEvent('keyboard-nav');\n            usedKeyboardNavigation = true;\n        }\n    }\n\n    var completeTwentyFivePercent =  function() {\n        trackEvent('completion', '0.25');\n    }\n\n    var completeFiftyPercent =  function() {\n        trackEvent('completion', '0.5');\n    }\n\n    var completeSeventyFivePercent =  function() {\n        trackEvent('completion', '0.75');\n    }\n\n    var completeOneHundredPercent =  function() {\n        trackEvent('completion', '1');\n    }\n\n    var startFullscreen = function() {\n        trackEvent('fullscreen-start');\n    }\n\n    var stopFullscreen = function() {\n        trackEvent('fullscreen-stop');\n    }\n\n    var begin = function(location) {\n        trackEvent('begin', location);\n    }\n\n    var readyChromecast = function() {\n        trackEvent('chromecast-ready');\n    }\n\n    var startChromecast = function() {\n        trackEvent('chromecast-start');\n    }\n\n    var stopChromecast = function() {\n        trackEvent('chromecast-stop');\n    }\n\n    // SLIDES\n\n    var exitSlide = function(slide_index) {\n        var currentTime = new Date();\n        timeOnLastSlide = Math.abs(currentTime - slideStartTime);\n        slideStartTime = currentTime;\n        trackEvent('slide-exit', slide_index, timeOnLastSlide);\n    }\n\n    setupGoogle();\n\n    return {\n        'trackEvent': trackEvent,\n        'openShareDiscuss': openShareDiscuss,\n        'closeShareDiscuss': closeShareDiscuss,\n        'clickTweet': clickTweet,\n        'clickFacebook': clickFacebook,\n        'clickEmail': clickEmail,\n        'postComment': postComment,\n        'actOnFeaturedTweet': actOnFeaturedTweet,\n        'actOnFeaturedFacebook': actOnFeaturedFacebook,\n        'copySummary': copySummary,\n        'useKeyboardNavigation': useKeyboardNavigation,\n        'completeTwentyFivePercent': completeTwentyFivePercent,\n        'completeFiftyPercent': completeFiftyPercent,\n        'completeSeventyFivePercent': completeSeventyFivePercent,\n        'completeOneHundredPercent': completeOneHundredPercent,\n        'exitSlide': exitSlide,\n        'startFullscreen': startFullscreen,\n        'stopFullscreen': stopFullscreen,\n        'begin': begin,\n        'readyChromecast': readyChromecast,\n        'startChromecast': startChromecast,\n        'stopChromecast': stopChromecast\n    };\n}());\n\n\n/** WEBPACK FOOTER **\n ** ./www/js/analytics.js\n **/","'use strict';\n\nvar required = require('requires-port')\n  , lolcation = require('./lolcation')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @api private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @api private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} location Location defaults for relative paths.\n * @param {Boolean|Function} parser Parser for the query string.\n * @api public\n */\nfunction URL(address, location, parser) {\n  if (!(this instanceof URL)) {\n    return new URL(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[2] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if (index = parse.exec(address)) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL}\n * @api public\n */\nURL.prototype.set = function set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n      url.pathname = value.charAt(0) === '/' ? value : '/' + value;\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n};\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String}\n * @api public\n */\nURL.prototype.toString = function toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n};\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nURL.extractProtocol = extractProtocol;\nURL.location = lolcation;\nURL.qs = qs;\n\nmodule.exports = URL;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url-parse/index.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/requires-port/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 }\n  , URL;\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @api public\n */\nmodule.exports = function lolcation(loc) {\n  loc = loc || global.location || {};\n  URL = URL || require('./');\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new URL(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new URL(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url-parse/lolcation.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decodeURIComponent(part[1])] = decodeURIComponent(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystringify/index.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}